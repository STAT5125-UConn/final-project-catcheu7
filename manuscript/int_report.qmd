---
title: A Look into the Distribution of Diabetes in the United States
author: Catherine Cheu
date: April 28, 2023
embed-resources: true
jupyter: python3
---

# Introduction

Diabetes is widespread in the United States and is a major cause of death in the nation. However, the distribution of the disease is not evenly spread. In a study in 2011, the southeastern region of the U.S. had higher rates of diabetes than others. Diabetes can be more easily developed through risk factors such as obesity and high blood sugar.

In this report, I will look at how the rates of diabetes has developed in the 2010s and to see how different factors affect its prevalence.

# Methods

## Data Acquisition

All diabetes rates are obtained from the CDC site. The map is obtained through open source in Kaggle. The states are divided into four regions. Please note that Mid-Atlantic states are split between the northeast and southeast regions even though they are usually considered separate. In addition, Alaska and Hawaii are part of the western states. I used the National Geographic classification which is as follows:

```{python}
ne = ['ME','VT','NH','CT','RI','MA','NY','PA','NJ']
south = ['DC','VA','MD','DE','NC','SC','GA','FL','MS','MO','TN','KY','WV','AL','TX','AR','LA','OK']
west = ['CA','WA','OR','ID','MT','CO','WY','UT','NV','AZ','NM','AK','HI']
mw = ['MI','OH','IL','IN','IA','WI','MN','ND','SD','NE','KS']
print('Northeast: ', ne)
print('South: ', south)
print('West: ', west)
print('Midwest: ', mw)
```

# Results

## Animation

```{python}
import geopandas, pandas, matplotlib, numpy, csv, glob, shapely, sklearn
from matplotlib import rc
from matplotlib.animation import FuncAnimation
import matplotlib.pyplot as plt
from sklearn import linear_model

rc('animation', html = 'jshtml')

files = glob.glob("../data/*.csv")
sugar = glob.glob("C:/Users/ccheu/final-project-catcheu7/data/sugar_data/*.csv", recursive = True)
pdfs = []
sdfs = []

for a in range(0,len(files)):
	b = pandas.read_csv(files[a], skiprows = 2)
	c = pandas.read_csv(sugar[a],skiprows = 2).replace('No Data', numpy.nan)
	pdfs.append(b)
	sdfs.append(c)

geous = geopandas.read_file("../data/us-states.json").rename(columns = {'name':'State'})

figure, [[ax,ax2,ax3], [ax4,ax5,ax6]] = plt.subplots(2,3,figsize = (10,10))

cbar = plt.cm.ScalarMappable(cmap = 'cool', norm = plt.Normalize(vmin = 7, vmax = 14))

plt.colorbar(cbar)

def up(z):
	gm = geous.merge(pdfs[z], on = 'State')
	su = geous.merge(sdfs[z], on = 'State')
	akg = gm[gm['State'].isin(['Alaska'])]
	aks = su[su['State'].isin(['Alaska'])]
	akg.plot(column = 'Percentage', cmap = 'cool', ax = ax2, vmin = 7, vmax = 14)
	aks.plot(column = 'Percentage', cmap = 'cool', ax = ax5, vmin = 40, vmax = 80, missing_kwds = dict(colors = 'grey'))
	ax2.set_xlim(-170,-140)
	#akg.plot(column = 'Percentage', cmap = 'cool', ax = ax)
	ax5.set_xlim(-170,-140)
	hi = gm[gm['State'].isin(['Hawaii'])]
	hs = su[su['State'].isin(['Hawaii'])]
	hi.plot(column = 'Percentage', cmap = 'cool', ax = ax3, vmin = 7, vmax = 14)

	hs.plot(column = 'Percentage', cmap = 'cool', ax = ax6, vmin = 40, vmax = 80, missing_kwds = dict(colors = 'grey'))
	cont = gm[~gm['State'].isin(['Alaska', 'Hawaii'])]
	cs = su[~su['State'].isin(['Alaska', 'Hawaii'])]
	cont.plot(column = 'Percentage', cmap = 'cool', ax = ax,vmin = 7,vmax = 14)

	cs.plot(column = 'Percentage', cmap = 'cool', ax = ax4,vmin = 40,vmax = 80, missing_kwds = dict(colors = 'grey'))

	#cont.plot(column = 'Percentage', cmap = 'cool', ax = ax4)
	#cont.plot(column = 'Percentage', cmap = 'cool', ax = ax7)
	#cont.plot(column = 'Percentage', cmap = 'cool', ax = ax10)

anim = FuncAnimation(figure, up, frames = 10, interval = 1000)
plt.close()

anim
```

## Linear Regression

For any row with missing values, it was dropped from the dataset.

```{python}
list = pdfs + sdfs
for i in range(0,len(pdfs)):
	gpdf = geous.merge(pdfs[i].merge(sdfs[i].rename(columns = {'Percentage':'Sugar'}), on = 'State'), on = 'State')
linmod = linear_model.LinearRegression()
```